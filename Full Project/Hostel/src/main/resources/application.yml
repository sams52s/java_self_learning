
server:
  error:
    include-message: always
    include-binding-errors: always

spring:
  datasource:
    password: 123
    url: jdbc:postgresql://localhost:5432/hostel?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
    username: sams
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 970707355379-89pq1jioq4vn0vjue40k20tdtj5ild6h.apps.googleusercontent.com
            client-secret: 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
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
  jpa:
    hibernate:
      #      ddl-auto: create-drop
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false

#Email Validation By Maildev
#  mail:
#    host: localhost
#    port: 1025
#    username: hello
#    password: hello
#
#    properties:
#      mail:
#        smtp:
#          ssl:
#            trust: "*"
#          auth: true
#          starttls:
#            enable: true
#          connectiontimeout: 5000
#          timeout: 3000
#          writetimeout: 5000

#Email Validation by gmail
  mail:
    host: smtp.gmail.com
    port: 587
    username: sams52tas@gmail.com
    password: hddbzeapjousdfiy
    properties:
      mail:
        smtp:
          ssl:
            trust: "*"
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000
app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost:3000 # Comma separated list of allowed origins
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect